"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_file_js_1 = require("config_file.js");
const WeaponData_1 = __importDefault(require("./WeaponData"));
/**
 * @en Weapon
 */
class Weapon {
    /**
     * @param data
     * @param enka
     */
    constructor(data, enka) {
        var _a;
        this.enka = enka;
        this._data = data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.weaponData = WeaponData_1.default.getById(json.getAsNumber("itemId"), enka);
        const weaponDataJson = new config_file_js_1.JsonReader(this.weaponData._data);
        const weapon = json.get("weapon");
        this.refinementRank = weapon.getAsNumberWithDefault(0, "affixMap", `${weaponDataJson.getAsNumber("skillAffix", 0)}`) + 1;
        this.refinement = (_a = this.weaponData.refinements[this.refinementRank - 1]) !== null && _a !== void 0 ? _a : null;
        this.level = weapon.getAsNumber("level");
        this.ascension = weapon.getAsNumberWithDefault(0, "promoteLevel");
        this.maxLevel = (this.ascension + 1) * 20 - (this.ascension > 1 ? (this.ascension - 1) * 10 : 0);
        this.isAwaken = this.ascension >= 2;
        this.weaponStats = this.weaponData.getStats(this.ascension, this.level);
    }
}
exports.default = Weapon;
