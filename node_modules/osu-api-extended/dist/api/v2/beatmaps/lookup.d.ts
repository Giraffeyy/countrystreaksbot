import { BeatmapsLookupAttributes } from "../../../types/v2/beatmaps_lookup_attributes";
import { BeatmapsLookupDifficulty } from "../../../types/v2/beatmaps_lookup_difficulty";
import { BeatmapsLookupSet } from "../../../types/v2/beatmaps_lookup_set";
import { Modes_names } from "../../../types";
type params = ({
    type: 'difficulty';
    id: number;
    checksum: string;
    filename: string;
} | {
    type: 'set';
    id: number;
} | {
    type: 'attributes';
    id: number;
    mods: number;
    mode: Modes_names;
});
type Response<T extends params['type']> = T extends 'difficulty' ? BeatmapsLookupDifficulty : T extends 'set' ? BeatmapsLookupSet : T extends 'attributes' ? BeatmapsLookupAttributes : never;
declare const name: <T extends params>(obj: T) => Promise<Response<T["type"]>>;
export default name;
