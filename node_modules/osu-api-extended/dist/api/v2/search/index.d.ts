import { beatmap_category, beatmap_sorting, beatmap_statuses, Modes_names, beatmap_genres, beatmap_languages, beatmap_ranks, beatmap_extra } from "../../../types";
import { SearchBeatmaps, SearchWiki } from '../../../types/v2/search_all';
type params = ({
    type: 'site';
    mode?: 'all' | 'user' | 'wiki_page';
    query?: string;
    page?: number;
} | {
    _played?: boolean;
    _nsfw?: boolean;
    type: 'beatmaps';
    query?: string;
    mode?: Modes_names | number;
    status?: beatmap_statuses;
    category?: (beatmap_category)[];
    genre?: beatmap_genres | number;
    language?: beatmap_languages | number;
    achieved_rank?: (beatmap_ranks)[];
    extra?: (beatmap_extra)[];
    sort?: beatmap_sorting;
    cursor_string?: string;
});
type Response<T extends params['type']> = T extends 'site' ? SearchWiki : T extends 'beatmaps' ? SearchBeatmaps : never;
declare const name: <T extends params>(obj: T) => Promise<Response<T["type"]>>;
export default name;
